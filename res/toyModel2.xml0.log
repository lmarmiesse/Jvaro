=====================================================
efmtool version 4.7.1, 2009-12-04 18:30:05
Copyright (c) 2009, Marco Terzer, Zurich, Switzerland
This is free software, !!! NO WARRANTY !!!
See LICENCE.txt for redistribution conditions
=====================================================
registered adjacency-method: ch.javasoft.metabolic.efm.adj.incore.tree.search.PatternTreeMinZerosAdjacencyEnumerator
registered adjacency-method: ch.javasoft.metabolic.efm.adj.incore.tree.search.PatternTreeLinearSearchAdjacencyEnumerator
registered adjacency-method: ch.javasoft.metabolic.efm.adj.incore.tree.rank.PatternTreeRankAdjacencyEnumerator
registered adjacency-method: ch.javasoft.metabolic.efm.adj.incore.tree.rank.PatternTreeModRankAdjacencyEnumerator
registered adjacency-method: ch.javasoft.metabolic.efm.adj.incore.tree.urank.modpi.ModIntPrimePatternTreeRankUpdateAdjacencyEnumerator
registered adjacency-method: ch.javasoft.metabolic.efm.adj.incore.tree.urank.modp.ModPrimePatternTreeRankUpdateAdjacencyEnumerator
registered adjacency-method: ch.javasoft.metabolic.efm.adj.incore.tree.urank.frac.FractionalPatternTreeRankUpdateAdjacencyEnumerator
registered adjacency-method: ch.javasoft.metabolic.efm.adj.incore.tree.urank.frac2.Fractional2PatternTreeRankUpdateAdjacencyEnumerator
registered adjacency-method: ch.javasoft.metabolic.efm.adj.incore.tree.urank.dbl.DoublePatternTreeRankUpdateAdjacencyEnumerator
registered adjacency-method: ch.javasoft.metabolic.efm.adj.incore.tree.urank.dbl2.Double2PatternTreeRankUpdateAdjacencyEnumerator
registered adjacency-method: ch.javasoft.metabolic.efm.adj.incore.FastRankTestAdjacencyEnumerator
registered adjacency-method: ch.javasoft.metabolic.efm.adj.incore.ModRankTestAdjacencyEnumerator
registered adjacency-method: ch.javasoft.metabolic.efm.adj.incore.PatternTreeSearchAdjacencyEnumerator
registered adjacency-method: ch.javasoft.metabolic.efm.adj.incore.LinearSearchAdjacencyEnumerator
registered adjacency-method: ch.javasoft.metabolic.efm.adj.ModIntPrimeInCoreAdjEnum
registered adjacency-method: ch.javasoft.metabolic.efm.adj.ModIntPrimeOutCoreAdjEnum
registered adjacency-method: ch.javasoft.metabolic.efm.adj.SearchInCoreAdjEnum
registered adjacency-method: ch.javasoft.metabolic.efm.dist.impl.adj.DistModIntPrimeInCoreAdjEnum
registered distributed adjacency-method: ch.javasoft.metabolic.efm.dist.impl.adj.DistModIntPrimeInCoreAdjEnum
registered adjacency-method: ch.javasoft.metabolic.efm.dist.impl.adj.DistModIntPrimeOutCoreAdjEnum
registered distributed adjacency-method: ch.javasoft.metabolic.efm.dist.impl.adj.DistModIntPrimeOutCoreAdjEnum
registered adjacency-method: ch.javasoft.metabolic.efm.dist.impl.adj.MultiThreadedAdjEnum
registered adjacency-method: ch.javasoft.metabolic.efm.dist.impl.adj.MultiProcessedAdjEnum
Elemetary flux mode computation
Implementation:
..algorithm name   : SequentialDoubleDescriptionImpl
..model type       : NullspaceEfmModel
..memory type      : InCoreMemory
..output type      : Text
System:
..hostname         : bi1330.babraham.ac.uk
..operating system : amd64/Linux/2.6.32-504.23.4.el6.x86_64
..processors       : 8
..vm               : Oracle Corporation/OpenJDK 64-Bit Server VM/24.85-b03
..vm-spec          : Oracle Corporation/Java Virtual Machine Specification/1.7
..vm arguments     : [-Xmx1G]
..memory, commited : 250M
..memory, used     : 17M
Config:
..generator        : Efm
..adj method       : pattern-tree-minzero
..row ordering     : MostZerosOrAbsLexMin
..arithmetic       : double (prec: -1 / zero: 1.0E-10)
..compression      : on
..compr. methods   : [CoupledZero, CoupledContradicting, CoupledCombine, UniqueFlows, DeadEnd, Recursive]
..normalize        : none
..max threads      : 8
..self test        : off
..progress type    : None
..progress part.   : 100
..suppress         : []
..enforce          : []
..nosplit          : []
..temp dir         : /local/tmp/???
..flag             : (none)
Distributed Config:
..node count       : 2
..nodes            : [localhost, localhost]
..vmargs           : [-Xmx800M, -Xmx500M]
..command          : /usr/bin/java [vmargs] -cp [classpath] [class] [args]
..partition        : 256
..cand. threshold  : 100000
Network metabolites: 
A, B, C, D, E, F, G, 
Network reactions: 
R4:	B --> E
R5:	C <--> D
R6:	D <--> E
R7:	C --> F
R1:	A --> C
R2:	A --> D
R3:	B --> D
R8:	D --> F
R9:	D --> G
R10:	E --> G
R_EX_G:	G --> #
R_EX_F:	F --> #
R_EX_A:	# --> A
R_EX_B:	# --> B
original network: 7 metabolites, 14 reactions (2 reversible)
compression iteration 1 (dead-ends/inconsistencies)
stoich matrix:
7x14 {
 [ 0 , 0 , 0 , 0 , -1 , -1 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 ]
 [ -1 , 0 , 0 , 0 , 0 , 0 , -1 , 0 , 0 , 0 , 0 , 0 , 0 , 1 ]
 [ 0 , -1 , 0 , -1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 1 , -1 , 0 , 0 , 1 , 1 , -1 , -1 , 0 , 0 , 0 , 0 , 0 ]
 [ 1 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , -1 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , -1 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , -1 , 0 , 0 , 0 ]
}
kernel matrix:
14x7 {
 [ 0 , 0 , 0 , -1 , 0 , 0 , 1 ]
 [ 1 , -1 , 0 , 0 , -1 , 1 , 0 ]
 [ 0 , 0 , 1 , 1 , 0 , 0 , -1 ]
 [ -1 , 0 , 0 , 0 , 1 , 0 , 0 ]
 [ 0 , -1 , 0 , 0 , 0 , 1 , 0 ]
 [ 0 , 1 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 1 , 0 , 0 , 0 ]
 [ 1 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , -1 , 0 , -1 , 1 , 1 ]
 [ 0 , 0 , 1 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , -1 , 1 , 1 ]
 [ 0 , 0 , 0 , 0 , 1 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 1 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 1 ]
}
compression iteration 2 (unique fluxes)
found uniquely produced metabolite: A
   [-] R_EX_A := # --> A
   [+] R1 := A --> C
   [>] R1 := # --> C
   [+] R2 := A --> D
   [>] R2 := # --> D
found uniquely consumed metabolite: G
   [-] R_EX_G := G --> #
   [+] R9 := D --> G
   [>] R9 := D --> #
   [+] R10 := E --> G
   [>] R10 := E --> #
found uniquely consumed metabolite: F
   [-] R_EX_F := F --> #
   [+] R7 := C --> F
   [>] R7 := C --> #
   [+] R8 := D --> F
   [>] R8 := D --> #
found uniquely produced metabolite: B
   [-] R_EX_B := # --> B
   [+] R4 := B --> E
   [>] R4 := # --> E
   [+] R3 := B --> D
   [>] R3 := # --> D
compression iteration 3 (unique fluxes)
compression iteration 4 (nullspace)
stoich matrix:
3x10 {
 [ 1 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , -1 ]
 [ 0 , 1 , -1 , 0 , 0 , 1 , 1 , -1 , -1 , 0 ]
 [ 0 , -1 , 0 , -1 , 1 , 0 , 0 , 0 , 0 , 0 ]
}
kernel matrix:
10x7 {
 [ 1 , -1 , -1 , -1 , 1 , 1 , 1 ]
 [ -1 , 1 , 0 , 0 , 0 , 0 , 0 ]
 [ -1 , 1 , 1 , 1 , -1 , -1 , 0 ]
 [ 1 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 1 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 1 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 1 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 1 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 1 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 1 ]
}
compression iteration 5 (unique/nullspace)
stoich matrix:
3x10 {
 [ 1 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , -1 ]
 [ 0 , 1 , -1 , 0 , 0 , 1 , 1 , -1 , -1 , 0 ]
 [ 0 , -1 , 0 , -1 , 1 , 0 , 0 , 0 , 0 , 0 ]
}
kernel matrix:
10x7 {
 [ 1 , -1 , -1 , -1 , 1 , 1 , 1 ]
 [ -1 , 1 , 0 , 0 , 0 , 0 , 0 ]
 [ -1 , 1 , 1 , 1 , -1 , -1 , 0 ]
 [ 1 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 1 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 1 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 1 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 1 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 1 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 1 ]
}
compression statistics
  meta[0].DeadEnd = 0
  meta[0].UniqueFlow = 0
  meta[0].Unused = 0
  meta[0].InterchangeableMetaboliteSimple = 0
  meta[0].InterchangeableMetaboliteComplex = 0
  reac[0].ZeroFlux = 0
  reac[0].Contradicting = 0
  reac[0].Coupled = 0
  reac[0].UniqueFlow = 0
  reac[0].DeadEnd = 0
  reac[0].DuplicateGeneSimple = 0
  reac[0].DuplicateGeneComplex = 0
  meta[1].DeadEnd = 0
  meta[1].UniqueFlow = 4
  meta[1].Unused = 0
  meta[1].InterchangeableMetaboliteSimple = 0
  meta[1].InterchangeableMetaboliteComplex = 0
  reac[1].ZeroFlux = 0
  reac[1].Contradicting = 0
  reac[1].Coupled = 0
  reac[1].UniqueFlow = 4
  reac[1].DeadEnd = 0
  reac[1].DuplicateGeneSimple = 0
  reac[1].DuplicateGeneComplex = 0
  meta.DeadEnd = 0
  meta.UniqueFlow = 4
  meta.Unused = 0
  meta.InterchangeableMetaboliteSimple = 0
  meta.InterchangeableMetaboliteComplex = 0
  reac.ZeroFlux = 0
  reac.Contradicting = 0
  reac.Coupled = 0
  reac.UniqueFlow = 4
  reac.DeadEnd = 0
  reac.DuplicateGeneSimple = 0
  reac.DuplicateGeneComplex = 0
  meta = 4
  reac = 4
compression matrices:
  pre * stoich * post  = cmp
efm uncompression:
  stoich * post * efmc = 0
  stoich * efm         = 0
  -->      efm         = post * efmc
stoich: 
7x14 {
 [ 0 , 0 , 0 , 0 , -1 , -1 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 ]
 [ -1 , 0 , 0 , 0 , 0 , 0 , -1 , 0 , 0 , 0 , 0 , 0 , 0 , 1 ]
 [ 0 , -1 , 0 , -1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 1 , -1 , 0 , 0 , 1 , 1 , -1 , -1 , 0 , 0 , 0 , 0 , 0 ]
 [ 1 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , -1 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , -1 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , -1 , 0 , 0 , 0 ]
}
pre: 
3x7 {
 [ 0 , 0 , 0 , 0 , 1 , 0 , 0 ]
 [ 0 , 0 , 0 , 1 , 0 , 0 , 0 ]
 [ 0 , 0 , 1 , 0 , 0 , 0 , 0 ]
}
post: 
14x10 {
 [ 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ]
 [ 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 ]
 [ 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 ]
 [ 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 1 ]
 [ 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 1 , 0 ]
 [ 1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 ]
}
cmp: 
3x10 {
 [ 1 , 1 , -1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , -1 , 0 , 1 , 1 , -1 , -1 , 1 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , -1 , 1 , -1 ]
}
cmp_reversibilities = [false, true, false, false, false, false, false, true, false, false]
network compression methods are [CoupledZero, CoupledContradicting, CoupledCombine, UniqueFlows, DeadEnd, Recursive]
Uncompressed network size: 7 metabolites, 14 reactions (2 reversible)
Compressed network size: 3 metabolites, 10 reactions (2 reversible)
compressed network: 3 metabolites, 10 reactions (2 reversible)
formatted kernel before reestablishing reaction category sorting:
12x9 {
 [ 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 ]
 [ 1 , -1 , -1 , 1 , 1 , 0 , 0 , -1 , 1 ]
 [ 0 , 1 , 1 , -1 , -1 , 1 , 0 , 1 , -1 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , -1 ]
}
formatted kernel after reestablishing reaction category sorting:
12x9 {
 [ 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 ]
 [ 1 , -1 , -1 , 1 , 1 , 0 , 0 , -1 , 1 ]
 [ 0 , 1 , 1 , -1 , -1 , 1 , 0 , 1 , -1 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , -1 ]
}
efm-model:
..kind             : NullspaceEfmModel
..arithmetic       : double
..adj enum threads : 8
..stoich type      : DefaultBigIntegerRationalMatrix
..stoich rank      : 3
..reaction sorting : [3, 4, 5, 6, 7, 2, 9, 10, 11, 8, 1, 0]
..metabolite sort. : [0, 1, 2]
..col i/m factory  : NullspaceEfmModelFactory
stoich expanded has dimensions 3x12
stoichiometric matrix
3x10 {
 [ 1 , 1 , -1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , -1 , 0 , 1 , 1 , -1 , -1 , 1 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , -1 , 1 , -1 ]
}
expanded stoichiometric matrix
3x12 {
 [ 1 , 1 , -1 , -1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]
 [ 0 , -1 , 1 , 0 , 1 , 1 , -1 , -1 , 1 , -1 , 0 , 0 ]
 [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , -1 , 1 , 1 , -1 ]
}
kernel matrix has dimensions 12x9
kernel matrix (unmapped):
12x9 {
 [ 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 ]
 [ 0.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 ]
 [ 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 ]
 [ 0.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 ]
 [ 0.0 , 0.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 ]
 [ 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 0.0 ]
 [ 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 ]
 [ 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 1.0 , 0.0 ]
 [ 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 1.0 ]
 [ 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 1.0 , 1.0 , -1.0 ]
 [ 0.0 , 1.0 , 1.0 , -1.0 , -1.0 , 1.0 , 0.0 , 1.0 , -1.0 ]
 [ 1.0 , -1.0 , -1.0 , 1.0 , 1.0 , 0.0 , 0.0 , -1.0 , 1.0 ]
}
kernel matrix:
12x9 {
 [ 1.0 , -1.0 , -1.0 , 1.0 , 1.0 , 0.0 , 0.0 , -1.0 , 1.0 ]
 [ 0.0 , 1.0 , 1.0 , -1.0 , -1.0 , 1.0 , 0.0 , 1.0 , -1.0 ]
 [ 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 0.0 ]
 [ 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 ]
 [ 0.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 ]
 [ 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 ]
 [ 0.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 ]
 [ 0.0 , 0.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 ]
 [ 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 1.0 , 1.0 , -1.0 ]
 [ 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 ]
 [ 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 1.0 , 0.0 ]
 [ 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 1.0 ]
}
mx * kernel:
3x9 {
 [ 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 ]
 [ 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 ]
 [ 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 ]
}
TIME preprocessing: 5274ms
iteration 0/3: 9 modes, dt=0ms.	{ next 1/3: 2 adj candidates, [+/0/-] = [2/6/1] }
Removed 0 modes
iteration 1/3: 10 modes, dt=34ms.	{ next 2/3: 12 adj candidates, [+/0/-] = [4/3/3] }
Removed 0 modes
iteration 2/3: 18 modes, dt=22ms.	{ next 3/3: 12 adj candidates, [+/0/-] = [4/11/3] }
Removed 0 modes
iteration 3/3: 18 modes, dt=10ms.
TIME iterate: 100ms
TIME jvm (total): 110ms
TIME jvm (per core): 13ms
TIME java (threads): cpu=0ms, user=0ms, system=0ms
efm count before postprocessing: 18
INFO: Exiting child thread #2. investigated modes: (2/18)
INFO: Exiting child thread #4. investigated modes: (2/18)
INFO: Exiting child thread #3. investigated modes: (2/18)
INFO: Exiting child thread #0. investigated modes: (3/18)
INFO: Exiting child thread #6. investigated modes: (2/18)
INFO: Exiting child thread #7. investigated modes: (2/18)
INFO: Exiting child thread #1. investigated modes: (3/18)
INFO: Exiting child thread #5. investigated modes: (2/18)
Removed 0 modes
DEBUG: after AbstractDoubleDescriptionImpl.filterModes()
efm count after filtering/consolidation: 16
uncompressing modes (can take a while)
uncompressing efms: 16 done.
TIME postprocessing: 27ms
overall computation time: 5443ms
